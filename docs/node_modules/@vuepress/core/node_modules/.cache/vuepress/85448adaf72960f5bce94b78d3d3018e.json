{"remainingRequest":"/home/jacksonv/Desktop/VuePressApp/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/jacksonv/Desktop/VuePressApp/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/jacksonv/Desktop/VuePressApp/docs/src/i40/README.md?vue&type=template&id=5ae29a68&","dependencies":[{"path":"/home/jacksonv/Desktop/VuePressApp/docs/src/i40/README.md","mtime":1676937794879},{"path":"/home/jacksonv/Desktop/VuePressApp/docs/node_modules/cache-loader/dist/cjs.js","mtime":1675874161495},{"path":"/home/jacksonv/Desktop/VuePressApp/docs/node_modules/cache-loader/dist/cjs.js","mtime":1675874161495},{"path":"/home/jacksonv/Desktop/VuePressApp/docs/node_modules/babel-loader/lib/index.js","mtime":1675874162719},{"path":"/home/jacksonv/Desktop/VuePressApp/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1675874165963},{"path":"/home/jacksonv/Desktop/VuePressApp/docs/node_modules/cache-loader/dist/cjs.js","mtime":1675874161495},{"path":"/home/jacksonv/Desktop/VuePressApp/docs/node_modules/vue-loader/lib/index.js","mtime":1675874163527},{"path":"/home/jacksonv/Desktop/VuePressApp/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1675874155059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}