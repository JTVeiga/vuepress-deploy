{"remainingRequest":"/home/jacksonv/Desktop/VueAppVeiga/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/jacksonv/Desktop/VueAppVeiga/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/jacksonv/Desktop/VueAppVeiga/docs/src/downlods/README.md?vue&type=template&id=f57a3806&","dependencies":[{"path":"/home/jacksonv/Desktop/VueAppVeiga/docs/src/downlods/README.md","mtime":1681660482969},{"path":"/home/jacksonv/Desktop/VueAppVeiga/docs/node_modules/cache-loader/dist/cjs.js","mtime":1677780969184},{"path":"/home/jacksonv/Desktop/VueAppVeiga/docs/node_modules/cache-loader/dist/cjs.js","mtime":1677780969184},{"path":"/home/jacksonv/Desktop/VueAppVeiga/docs/node_modules/babel-loader/lib/index.js","mtime":1677780969040},{"path":"/home/jacksonv/Desktop/VueAppVeiga/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1677780974645},{"path":"/home/jacksonv/Desktop/VueAppVeiga/docs/node_modules/cache-loader/dist/cjs.js","mtime":1677780969184},{"path":"/home/jacksonv/Desktop/VueAppVeiga/docs/node_modules/vue-loader/lib/index.js","mtime":1677780974645},{"path":"/home/jacksonv/Desktop/VueAppVeiga/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1677780968692}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}